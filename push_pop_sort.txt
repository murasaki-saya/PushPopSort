ex: 10,7,5,9,1,6,2

version1
  run1
	stack:10,7,5

	pop:5,7

	stack:10,9,1

	pop:5,7,1

	stack:10,9,6,2

	pop:5,7,1,2,6,9,10 (array)

	pop from back of array: 10,9,6,2,1 (no overflow)

  run2
	stack:5

	pop:5

	stack:7,1

	pop:5,1

	stack:7,2

	pop:5,1,2

	stack:7,6

	pop:5,1,2,6,7

	stack:9

	pop:5,1,2,6,7,9

	stack:10

	pop:5,1,2,6,7,9,10

	push:10,9,7,6,2,1 (no overflow)

  run3
	stack:5,1

	pop:1

	stack:5,2

	pop:1,2

	stack:6

	pop:1,2,5

	stack:7

	pop:1,2,5,6

	stack:9

	pop :1,2,5,6,7

	stack:10

	pop:1,2,5,6,7,9

	pop:1,2,5,6,7,9,10

  run4
	push:10,9,7,6,5,2,1,overflow

	complete sort

-------------------------------------------------------------------

version2
  multiple stacks in one array, and use another array to record stacks' position respectively

  run1
	10,7,5,9,1,6,2

  *stage1

	stack:10,7,5

	stack:9,1

	stack:6,2

	position:3,5,7

	pos[0]!=7 (pos[0]!=length of array)

  *stage2: run virtically (stack1 to stack3)

	stack:5,1

	pop:1

	stack:5,2

	pop:1,2,5

	stack:7

	pop:1,2,5,7

	stack:10,9,6

	pop:1,2,5,7,6,9,10 (push to stack)

  run2
	stack:10,9,7,6,5,2,1

	pos:7 (pos[0]==length of array)

	complete sort

    *if (position.length==2) then use merge

      or

      just execute stage 1, then use merge sort

-------------------------------------------------------------------

version3
  10,7,5,9,1,6,2

  run1
	stack:10,7,5

	pop:5,7

	stack:10,9,1

	pop:5,7,1

	stack:10,9,6,2

	pop:5,7,1,2,6,9,10 (pop to array)

	pop array to stack=>stack:10,9,6,2,1 (no overflow)

	array:5,7

  run2
	(array compare to stack, and then pop)

	pop:1,2

	stack:10,9,6

	array:5,7

	stack:10,9,6,5

	array:7

	pop:1,2,5,6

	stack:10,9,7

	pop:1,2,5,6,7,9,10 (pop to array)

	pop array to stack=>stack:10,9,7,6,5,2,1,overflow

	complete sort

-------------------------------------------------------------------

version3.5
  10,7,5,9,1,6,2

run1
  *stage1

	stack:10,7,5

	pop:5,7




	stack:10,9,1

	pop:5,7,1




	stack:10,9,6,2

	(array = pop)

	array:5,7,1

  *stage2   
     if (stack[top] > array[last]) then pop array to stack

	stack:10,9,6,2,1

	array:5,7

  *stage3

	(array compare to stack, and then pop)

	stack:10,9,6,2,1

	array:5,7

	pop:1,2


	stack:10,9,6,5

	array:7

	pop:1,2,5,6


	stack:10,9,7

	array:null

	pop:1,2,5,6

  *stage4

       if(array == null) then pop stack

	pop:1,2,5,6,7,9,10

	complete sort


stage1:

if (item < stack.top) then push to stack

else pop(stack) until (item < stack.top) 

and push(item) to stack

*pop(stack) to array

stage2:
if (array.top < stack.top) then pop(array) to stack until (array.top >= stack.top)

stage3:

if(array.item <= stack.top) then print(array.item) until (array.item > stack.top)

     if(array.item > stack.top) then pop(stack) and print(pop(stack)) until (array.item <= stack.top)

(array from left to right)

stage4:

if (array == null) then pop(stack) and print(pop(stack)) until (stack==null)
